
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_MaintainEmployerLayout.cshtml";
}
@{
    ViewBag.ImageUrl = "../../Resource/Images/BusinessBlankImg.jpg";
}

<div class="business-info-container shadow border-radius-5px">
    <h2>Thông tin doanh nghiệp</h2>
    <form class="custom-employer-input-group mb-3" id="employerInfoFrom" name="employerInfoFrom" method="post" action="">
        <div class="card image-container flex-center">
            <img src="@ViewBag.ImageUrl" id="BusinessImage" alt="...">
        </div>
        <div>
            <div class="mb-3 input-file-container">
                <label for="formFileInput" class="form-label">Chọn ảnh bìa doanh nghiệp</label>
                <input class="form-control form-control-sm" id="formFileInput" type="file" accept="image/*">
            </div>

            <div class="mb-3">
                <div class="form-group">
                    <label for="txtBusinessName">Tên doanh nghiệp</label>
                    <input type="text" class="form-control input-text" id="txtBusinessName" aria-describedby="emailHelp" placeholder="Nhập tên doanh nghiệp">
                </div>
                <div class="form-group">
                    <label for="txtIndustry">Hoạt động kinh doanh</label>
                    <input type="text" class="form-control input-text" id="txtIndustry" aria-describedby="emailHelp" placeholder="Nhập hoạt động kinh doanh">
                </div>
                <div class="form-group">
                    <label for="txtWebsite">Website</label>
                    <input type="text" class="form-control input-text" id="txtWebsite" aria-describedby="emailHelp" placeholder="Nhập địa chỉ website">
                </div>
            </div>
        </div>
        <div class="business-button-zone mb-3">
            <label class="business-custom-checkbox btn btn-primary" for="isEditing">
                <input type="checkbox" name="isEditing" id="isEditing" value="" />
                <span class="edit-switch">Chỉnh sửa</span>
            </label>
            <input class="btn btn-primary" type="submit" name="btnBusinessInfoSubmit" id="btnBusinessInfoSubmit" value="Lưu" />
        </div>
    </form>
    <div class="card-container ">
    </div>
</div>

<script>
    let checkbox = document.getElementById("isEditing");
    let form = document.getElementsByClassName("custom-employer-input-group")[0];
    let userId = document.getElementById("userId").value;
    let getEmployerUrl = `http://localhost:56673/api/Employers/GetEmployerById/${userId}`;
    //var inputFileContainer = document.getElementsByClassName("input-file-container");
    //var textInputs = form.querySelectorAll('.input-text');
    var inputs = form.querySelectorAll('.form-control');

    function disableInput(inputs, isDisable) {
        inputs.forEach((input) => {
            input.disabled = isDisable;
        })
    };

    let fetchMethodGet = async (url) => {
        return (await fetch(url)).json();
    }

    let replaceInput = function (isEditable) {
        let textInputs = form.querySelectorAll('.input-text');
        if (isEditable) {
            inputFileContainer[0].style.display = 'block';
            textInputs.forEach(elm => {
                let inputElm = document.createElement('input');
                inputElm.type = 'text';
                inputElm.id = elm.id;
                inputElm.className = elm.className;
                inputElm.name = elm.name;
                inputElm.value = elm.textContent;
                elm.parentNode.replaceChild(inputElm, elm);
            })
        } else {
            textInputs.forEach(elm => {
                inputFileContainer[0].style.display = 'none';
                let spanElm = document.createElement('p');
                spanElm.id = elm.id;
                spanElm.className = elm.className;
                spanElm.name = elm.name;
                spanElm.textContent = elm.value;
                elm.parentNode.replaceChild(spanElm, elm);
            })
        }
    };

    let doomEmployerInfo = async function () {
        let user = await fetchMethodGet(getEmployerUrl);
        document.getElementById("BusinessImage").src = user.User.imageURL ? user.User.imageURL : "@ViewBag.ImageUrl";
        document.getElementById("txtBusinessName").value = user.company_name;
        document.getElementById("txtIndustry").value = user.industry;
        document.getElementById("txtWebsite").value = user.website;
    }

    let doomEmployeeJobPosting = async function () {
        let getPostingAPI = `http://localhost:56673/api/JobPostings/GetJobPostingByEmployeeId/${userId}`;
        let postingList = await fetchMethodGet(getPostingAPI);
        let imageURL = postingList[0].Employer.User.imageURL ? postingList[0].Employer.User.imageURL : "@ViewBag.ImageUrl";
        let postingCards = postingList.map(function (posting) {
            return `<div class="card flex-direction-column mb-3 job" style="width: auto">
                        <div style="width: 100%; display: flex; padding-inline: 1rem; ">
                            <img src="${imageURL}" class="card-img-top image-fit-width" alt="...">
                        </div>
                        <div class="card-body ">
                            <div>
                                <a href="/Business/Details/${posting.job_id}" class="card-title font-bold job-title">${posting.title}</a>
                            </div>
                            <div>
                                <span class="company-name">${posting.Employer.company_name}</span>
                            </div>
                            <div>
                                <span class="job-salary">${posting.salary}</span>
                            </div>
                            <div>
                                <span class="address">${posting.location}</span>
                            </div>
                            <div class="skill-container">
                                ${posting.JobSkills.map(function (skill) {
                                    return `<a href="#" class="border-radius-5px mb-3">${skill.SkillRequirement.skill_name}</a>`
                                }).join('')}
                            </div>
                        </div>
                    </div>`;
        }).join('');
        document.querySelector(".card-container").innerHTML = postingCards;
    }

    resetNavOption("linYourBusiness");

    //replaceInput(false);

    disableInput([...inputs, btnBusinessInfoSubmit], true);
    doomEmployerInfo();
    doomEmployeeJobPosting();

    checkbox.addEventListener("click", () => {
        let checkboxSpan = document.getElementsByClassName("edit-switch")[0];
        let checkboxLabel = document.getElementsByClassName("business-custom-checkbox")[0];
        let btnBusinessInfoSubmit = document.getElementById("btnBusinessInfoSubmit");
        if (checkbox.checked == true) {
            disableInput([...inputs, btnBusinessInfoSubmit], false);
            //replaceInput(true);
            checkboxSpan.textContent = "Hủy";
            checkboxLabel.classList.remove("btn-primary");
            checkboxLabel.classList.add("btn-secondary")
        } else {
            disableInput([...inputs, btnBusinessInfoSubmit], true);
            //replaceInput(false);
            checkboxSpan.textContent = "Chỉnh sửa";
            checkboxLabel.classList.remove("btn-secondary")
            checkboxLabel.classList.add("btn-primary");
        }
    });

    document.getElementById("btnBusinessInfoSubmit").addEventListener("click", (e) => {
        e.preventDefault();
        let img = document.getElementById("formFileInput").files[0];
        let business_name = document.getElementById("txtBusinessName").value;
        let industry = document.getElementById("txtIndustry").value;
        let website = document.getElementById("txtWebsite").value;
        let formData = new FormData();
        let PutEmployerUrl = "http://localhost:56673/api/Employers/PutEployer"
        formData.append("Employer_id", userId);
        formData.append("Company_name", business_name);
        formData.append("Industry", industry);
        formData.append("Website", website);
        formData.append("Image", img);
        fetch(PutEmployerUrl, {
            method: "PUT",
            body: formData
        })
        employerInfoFrom.submit();
    });

    document.getElementById("formFileInput").addEventListener("change", () => {
        let img = document.getElementById("formFileInput").files[0];
        if (img) {
            document.getElementById("BusinessImage").src = URL.createObjectURL(img);
        } else {
            document.getElementById("BusinessImage").src = "@ViewBag.ImageUrl";
        }
    })
</script>

